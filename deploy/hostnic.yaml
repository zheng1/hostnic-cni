apiVersion: v1
kind: ServiceAccount
metadata:
  name: hostnic-node
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hostnic-node
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - namespaces
  verbs:
  - list
  - watch
  - get
  - update
  - patch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hostnic-node
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hostnic-node
subjects:
- kind: ServiceAccount
  name: hostnic-node
  namespace: kube-system
---
apiVersion: v1
data:
  hostnic: |
    {
      "pool":{
        "isVBC":true,
        "poolHigh":5,
        "poolLow":3,
        "maxNic":60
      }
    }
  hostnic-cni: |
    {
      "cniVersion": "0.3.0",
      "name": "hostnic",
      "type": "hostnic",
      "serviceCIDR" : "10.233.0.0/18",
      "hairpin": false,
      "natMark": "0x10000"
    }
kind: ConfigMap
metadata:
  name: hostnic-cfg-cm
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: hostnic-node
  name: hostnic-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: hostnic-node
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: hostnic-node
    spec:
      containers:
      - command:
        - /app/hostnic-agent
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: kubespheredev/hostnic:vbc-test
        imagePullPolicy: IfNotPresent
        name: hostnic-node
        ports:
        - containerPort: 61678
          name: metrics
        resources:
          requests:
            cpu: 100m
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /opt/cni/bin
          name: cni-bin-dir
        - mountPath: /etc/cni/net.d
          name: cni-net-dir
        - mountPath: /etc/hostnic/
          name: hostnic-cfg
        - mountPath: /var/lib/hostnic
          name: hostnic-db
        - mountPath: /var/run/hostnic
          name: hostnic-run
        - mountPath: /root/.qingcloud/
          name: apiaccesskey
          readOnly: true
        - mountPath: /etc/qingcloud/
          name: qingcloud-cfg
          readOnly: true
      hostNetwork: true
      initContainers:
      - args:
        - /app/install_hostnic.sh
        command:
        - /bin/sh
        image: kubespheredev/hostnic:vbc-test
        imagePullPolicy: IfNotPresent
        name: hostnic-init
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /opt/cni/bin
          name: cni-bin-dir
        - mountPath: /etc/cni/net.d
          name: cni-net-dir
        - mountPath: /etc/hostnic/
          name: hostnic-cfg
      priorityClassName: system-node-critical
      serviceAccountName: hostnic-node
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /opt/cni/bin
        name: cni-bin-dir
      - hostPath:
          path: /etc/cni/net.d
        name: cni-net-dir
      - hostPath:
          path: /var/lib/hostnic
        name: hostnic-db
      - hostPath:
          path: /var/run/hostnic
        name: hostnic-run
      - configMap:
          items:
          - key: hostnic
            path: hostnic.json
          - key: hostnic-cni
            path: 10-hostnic.conf
          name: hostnic-cfg-cm
        name: hostnic-cfg
      - name: apiaccesskey
        secret:
          items:
          - key: config.yaml
            path: config.yaml
          secretName: qcsecret
      - hostPath:
          path: /etc/qingcloud
        name: qingcloud-cfg
  updateStrategy:
    type: RollingUpdate
